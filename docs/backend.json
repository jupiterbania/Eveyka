
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the FocusFinds application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "username": {
          "type": "string",
          "description": "User's username or display name."
        },
        "profileImageUrl": {
          "type": "string",
          "description": "URL of the user's profile image.",
          "format": "uri"
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates whether the user has administrative privileges."
        }
      },
      "required": [
        "id",
        "email",
        "username"
      ]
    },
    "Image": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Image",
      "type": "object",
      "description": "Represents an image available on the FocusFinds platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the image."
        },
        "title": {
          "type": "string",
          "description": "Title of the image."
        },
        "description": {
          "type": "string",
          "description": "Description of the image."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the original, high-resolution image.",
          "format": "uri"
        },
        "blurredImageUrl": {
          "type": "string",
          "description": "URL of the blurred version of the image.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "Date and time when the image was uploaded.",
          "format": "date-time"
        },
        "dominantColor": {
          "type": "string",
          "description": "The dominant color of the image as a hex code, used for UI backgrounds."
        }
      },
      "required": [
        "id",
        "title",
        "imageUrl",
        "blurredImageUrl",
        "uploadDate"
      ]
    },
    "Message": {
      "title": "Message",
      "description": "Represents a message sent from a user to an admin.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string", "description": "Sender's name (for anonymous users)." },
        "userId": { "type": "string", "description": "Sender's user ID (if logged in)." },
        "email": { "type": "string", "description": "Sender's email (if logged in)." },
        "message": { "type": "string", "description": "The content of the message." },
        "isRead": { "type": "boolean", "description": "True if the admin has read the message." },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["name", "message", "createdAt"]
    },
    "Reply": {
        "title": "Reply",
        "description": "Represents a reply from an admin to a user message.",
        "type": "object",
        "properties": {
            "id": { "type": "string" },
            "message": { "type": "string" },
            "sentAt": { "type": "string", "format": "date-time" },
            "isFromAdmin": { "type": "boolean" }
        },
        "required": ["message", "sentAt", "isFromAdmin"]
    },
    "SiteSettings": {
      "title": "SiteSettings",
      "description": "A singleton document to store site-wide settings.",
      "type": "object",
      "properties": {
        "heroImageUrl": {
          "type": "string",
          "description": "The URL for the homepage hero image background.",
          "format": "uri"
        },
         "heroImageHint": {
          "type": "string",
          "description": "The AI hint for the hero image."
        }
      }
    }
  },
  "auth": {
    "providers": [
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Accessible only to the user and administrators.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/images/{imageId}",
        "definition": {
          "entityName": "Image",
          "schema": {
            "$ref": "#/backend/entities/Image"
          },
          "description": "Stores image metadata.",
          "params": [
            {
              "name": "imageId",
              "description": "The unique identifier of the image."
            }
          ]
        }
      },
      {
        "path": "/messages/{messageId}",
        "definition": {
          "entityName": "Message",
          "schema": { "$ref": "#/backend/entities/Message" },
          "description": "Stores messages sent by users.",
          "params": [{ "name": "messageId", "description": "The unique ID of the message." }]
        }
      },
      {
        "path": "/messages/{messageId}/replies/{replyId}",
        "definition": {
          "entityName": "Reply",
          "schema": { "$ref": "#/backend/entities/Reply" },
          "description": "Stores replies to a specific message.",
          "params": [
            { "name": "messageId", "description": "The ID of the parent message." },
            { "name": "replyId", "description": "The unique ID of the reply." }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores administrator roles. Existence of a document grants admin privileges. DBAC - Existence over Content.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
       {
        "path": "/settings/main",
        "definition": {
          "entityName": "SiteSettings",
          "schema": {
            "$ref": "#/backend/entities/SiteSettings"
          },
          "description": "A singleton document for global site settings like the hero image.",
          "params": []
        }
      }
    ]
  }
}
